<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	 version="2.4">
    
    <!--
      - Location of the XML file that defines the root application context.
      - Applied by ContextLoaderServlet.
            -
            - Can be set to "/WEB-INF/applicationContext-hibernate.xml" for the Hibernate
            - implementation, "/WEB-INF/applicationContext-ojb.xml" for the Apache OJB one,
            - "/WEB-INF/applicationContext-toplink.xml" for the Oracle TopLink one,
            - or "/WEB-INF/applicationContext-jdbc.xml" for the JDBC one.
      -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/classes/config/spring/applicationContext.xml</param-value>
            <!--
            <param-value>/WEB-INF/applicationContext-hibernate.xml</param-value>
            <param-value>/WEB-INF/applicationContext-ojb.xml</param-value>
            <param-value>/WEB-INF/applicationContext-toplink.xml</param-value>
            -->
    </context-param>
   
    <!--
	  - Key of the system property that should specify the root directory of this
	  - web app. Applied by WebAppRootListener or Log4jConfigListener.
	  -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>itp.root</param-value>
    </context-param>
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.properties</param-value>
    </context-param>
    <filter>
        <filter-name>OpenViewInSessionFilter</filter-name>
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
        <init-param>
            <param-name>singleSession</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>sessionFactoryBeanName</param-name>
            <param-value>aaaSessionFactory</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>OpenViewInSessionFilter</filter-name>
        <url-pattern>/services/*</url-pattern>
    </filter-mapping>    
    <!--
      - Loads the root application context of this web app at startup,
      - by default from "/WEB-INF/applicationContext.xml".
            - Note that you need to fall back to Spring's ContextLoaderServlet for
            - J2EE servers that do not follow the Servlet 2.4 initialization order.
            -
      - Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
      - to access it anywhere in the web application, outside of the framework.
      -
      - The root context is the parent of all servlet-specific contexts.
      - This means that its beans are automatically available in these child contexts,
      - both for getBean(name) calls and (external) bean references.
      -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <!--
      - Configures Log4J for this web app.
      - As this context specifies a context-param "log4jConfigLocation", its file path
      - is used to load the Log4J configuration, including periodic refresh checks.
      -
      - Would fall back to default Log4J initialization (non-refreshing) if no special
      - context-params are given.
      -
      - Exports a "web app root key", i.e. a system property that specifies the root
      - directory of this web app, for usage in log file paths.
      - This web app specifies "petclinic.root" (see log4j.properties file).
      -->
    <!-- Leave the listener commented-out if using JBoss -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <listener>
        <listener-class>
            com.itp.servlet.listener.ApplicationConfigContextListener
        </listener-class>
    </listener>
   
   <!-- STRUTS CONFIG -->
    <servlet>
        <servlet-name>action</servlet-name>
        <servlet-class>org.apache.struts.action.ActionServlet</servlet-class>
        <init-param>
            <param-name>config</param-name>
            <param-value>/WEB-INF/classes/config/struts/struts-config.xml</param-value>
        </init-param>
        <init-param>
            <param-name>debug</param-name>
            <param-value>2</param-value>
        </init-param>
        <init-param>
            <param-name>detail</param-name>
            <param-value>2</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>action</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>
    <taglib>
        <taglib-uri>/tags/struts-bean</taglib-uri>
        <taglib-location>/WEB-INF/tld/struts-bean.tld</taglib-location>
    </taglib>
    <taglib>
        <taglib-uri>/tags/struts-html</taglib-uri>
        <taglib-location>/WEB-INF/tld/struts-html.tld</taglib-location>
    </taglib>
    <taglib>
        <taglib-uri>/tags/struts-logic</taglib-uri>
        <taglib-location>/WEB-INF/tld/struts-logic.tld</taglib-location>
    </taglib>
    <taglib>
        <taglib-uri>/tags/struts-nested</taglib-uri>
        <taglib-location>/WEB-INF/tld/struts-nested.tld</taglib-location>
    </taglib>
    <taglib>
        <taglib-uri>/tags/struts-tiles</taglib-uri>
        <taglib-location>/WEB-INF/tld/struts-tiles.tld</taglib-location>
    </taglib>
    <taglib>
        <taglib-uri>/tags/ajax</taglib-uri>
        <taglib-location>/WEB-INF/tld/ajaxtags.tld</taglib-location>
    </taglib>
    <session-config>
        <session-timeout>
            30
        </session-timeout>
    </session-config>
    <welcome-file-list>
        <welcome-file>
            index.jsp
        </welcome-file>
    </welcome-file-list>
    <error-page>
        <exception-type>java.lang.Exception</exception-type>
        <location>/WEB-INF/jsp/error/uncaughtException.jsp</location>
    </error-page>
    <auth-constraint>
        <description>
               only these types of users may use the system
        </description>
        <role-name>administrator</role-name>
        <role-name>employee</role-name>
    </auth-constraint>
    <!-- GENERATED JSP MAPPINGS -->
</web-app>
